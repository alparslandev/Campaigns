apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    dataBinding {
        enabled = true
    }

    compileSdkVersion 28
    defaultConfig {
        applicationId "com.campaigns"
        minSdkVersion 23
        targetSdkVersion 28
        versionCode rootProject.ext.versionCode
        versionName getBuildVersionName()
        buildConfigField("String", "API_BASE_URL", "\"${api_base_url}\"")
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"
    implementation 'com.google.android.material:material:1.0.0'
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0-alpha03'
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    // Glide
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'
    // Rx
    implementation "io.reactivex.rxjava2:rxjava:2.2.6"
    implementation "io.reactivex.rxjava2:rxandroid:2.1.1"

    // Dagger 2
    implementation "com.google.dagger:dagger:$dagger2_version"
    kapt "com.google.dagger:dagger-compiler:$dagger2_version"
    kapt "com.android.databinding:compiler:$android_plugin_version"
    compileOnly "org.glassfish:javax.annotation:3.1.1"
    testİmplementation 'junit:junit:4.12'
    androidTestİmplementation 'androidx.test:runner:1.1.0-alpha4'
    androidTestİmplementation 'androidx.test.espresso:espresso-core:3.1.0-alpha4'
}

kapt {
    generateStubs = true
}

def getPropertiesFile() {
    return file("${project.rootDir}/gradle.properties")
}
def getBuildVersionName() {
    Properties properties = new Properties()
    def propsFile = getPropertiesFile()
    if (propsFile.canRead()) {

        properties.load(propsFile.newDataInputStream())
        def major = properties.getProperty("versionMajor") as String
        def minor = properties.getProperty("versionMinor") as String
        def patch = properties.getProperty("versionPatch") as String
        def build = properties.getProperty("versionBuild") as String

        def version = major + "." + minor
        if (build != "0") {
            version += "." + patch + "." + build
        } else if (patch != "0") {
            version += "." + patch
        }
        return version

    } else {
        throw new GradleException("Versionname : unable to find gradle.properties file : \n" + propsFile.absolutePath)
    }
}